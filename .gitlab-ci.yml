stages:
    - version
    - build
    - push
variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CI_IMAGE: $CI_REGISTRY/tygercaddy/tygercaddy
  PLATFORM: linux/amd64,linux/arm64,linux/arm/v7

semantic_release:
  stage: version
  image: smartive/semantic-release-image
  tags: 
   - docker
  only: 
    - branches
  artifacts:
    paths:
    - VERSION.txt
    - version.js
  script:
    - npx semantic-release
    - cat VERSION.txt
    - ls -ls
    - rm -R frontend/src/version.js
    - echo "export const version = '$(cat VERSION.txt)';" > version.js
    - cat version.js

build-docker:
    stage: build
    image: jonoh/docker-buildx-qemu
    tags: 
      - docker
    variables:
      PLATFORM: linux/amd64
      TAG_VERSION: latest
      DOCKER_HOST: tcp://docker:2375/
    services:
      - docker:19.03.0-dind
    only:
      - dev
      - test
    before_script:
      - sh prebuild.sh
    script:
      - >
        if [ "$CI_COMMIT_BRANCH" == "dev" ]; then
          export BRANCH_VERSION="dev-latest"
        else
          export BRANCH_VERSION="test-latest"
        fi
      - export TAG_VERSION="$BRANCH_VERSION"
      - ls
      - cat version.js
      - cat frontend/src/version.js
      - sh build.sh

build-docker-release:
    stage: build
    image: jonoh/docker-buildx-qemu
    tags: 
      - docker
    services:
      - docker:19.03.0-dind
    variables:
      PLATFORM: linux/amd64
      TAG_VERSION: latest
      VERSION_PREFIX: ""
    only:
      - master
    before_script:
      - sh prebuild.sh
    script:
      - ls
      - cat version.js
      - cat frontend/src/version.js
      - sh build.sh

build-docker-ARM64-release:
    stage: build
    tags: 
      - shell
    variables:
      PLATFORM: linux/arm64,linux/arm/v7
      TAG_VERSION: latest
      VERSION_PREFIX: "ARM64-"
      DOCKER_HOST: unix:///var/run/docker.sock
    only:
      - master
    script:
      - ls
      - cat version.js
      - sh buildARM.sh
push-to-docker-hub:
    stage: push
    tags: 
      - docker
    variables:
      DOCKER_HOST: unix:///var/run/docker.sock
      DOCKER_HUB: hub.docker.com/morph1904/tygercaddy
    only:
      - master
    script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker pull $CI_REGISTRY/tygercaddy/tygercaddy -a
      - docker tag $CI_REGISTRY/tygercaddy/tygercaddy:test-latest morph1904/tygercaddy:test-latest
      - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
      - docker push morph1904/tygercaddy:test-latest
      - docker tag $CI_REGISTRY/tygercaddy/tygercaddy:latest morph1904/tygercaddy:latest
      - docker push morph1904/tygercaddy:latest