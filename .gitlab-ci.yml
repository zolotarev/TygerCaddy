stages:
  - Build Dev Image
  - Push Dev Image
  - Build Test Image
  - Build Release Image

variables:
  CONTAINER_DEV_IMAGE: $CI_REGISTRY/tygercaddy/tygercaddy:dev
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/tygercaddy/tygercaddy:test
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/tygercaddy/tygercaddy:latest

docker dev build:
  stage: Build Dev Image
  rules: 
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:  
    - docker build -t $CONTAINER_DEV_IMAGE -t tygercaddy/tygercaddy:dev .

docker dev push:
  stage: Push Dev Image
  rules: 
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:  
    - docker push $CI_REGISTRY/tygercaddy/tygercaddy:dev

docker test build:
  stage: Build Test Image
  rules: 
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"'
      when: always
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:  
    - docker build -t CONTAINER_TEST_IMAGE -t tygercaddy/tygercaddy:test .
    - docker push $CI_REGISTRY/tygercaddy/tygercaddy:test

docker test push:
  stage: Push Test Image
  rules: 
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "test"'
      when: always
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:  
    - docker push $CI_REGISTRY/tygercaddy/tygercaddy:test

docker release build:
  stage: Build Release Image
  rules: 
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: always
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:  
    - docker build -t CONTAINER_DEV_IMAGE -t tygercaddy/tygercaddy:dev .
    - docker push $CI_REGISTRY/tygercaddy/tygercaddy:dev